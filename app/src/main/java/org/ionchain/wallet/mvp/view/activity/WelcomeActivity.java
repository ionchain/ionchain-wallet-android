package org.ionchain.wallet.mvp.view.activity;import android.content.Intent;import android.view.View;import android.view.animation.AlphaAnimation;import android.view.animation.Animation;import android.widget.ProgressBar;import android.widget.RelativeLayout;import android.widget.TextView;import com.lzy.okgo.model.Progress;import org.ionc.wallet.sdk.IONCWalletSDK;import org.ionc.wallet.utils.Logger;import org.ionchain.wallet.App;import org.ionchain.wallet.R;import org.ionchain.wallet.mvp.model.update.OnCheckUpdateInfoCallback;import org.ionchain.wallet.mvp.presenter.Presenter;import org.ionchain.wallet.mvp.view.activity.create.CreateWalletSelectActivity;import org.ionchain.wallet.mvp.view.base.AbsBaseActivity;import org.ionchain.wallet.utils.AppUtil;import org.ionchain.wallet.utils.NetUtils;import org.ionchain.wallet.utils.ToastUtil;import org.ionchain.wallet.widget.dialog.download.DownloadDialog;import org.ionchain.wallet.widget.dialog.version.VersionInfoDialog;import java.util.List;import static org.ionchain.wallet.constant.ConstantErrorCode.ERROR_CODE_NET_WORK_UPDATE;/** * Created by siberiawolf on 17/4/28. */public class WelcomeActivity extends AbsBaseActivity implements        Animation.AnimationListener,        OnCheckUpdateInfoCallback,        NetUtils.DownloadCallback,        VersionInfoDialog.OnVersionDialogBtnClickedListener {    RelativeLayout welcome_layout;    ProgressBar progressBar;    TextView progressValueTv;    RelativeLayout progressRl;    private AlphaAnimation aAnimation;    @Override    protected void initData() {        String version_name = AppUtil.getVersionName(this);        TextView v = findViewById(R.id.version_name);        v.setText(getString(R.string.version, version_name));        progressValueTv = findViewById(R.id.download_progress_value);        progressBar = findViewById(R.id.download_progress);        progressRl = findViewById(R.id.progressRL);        aAnimation = new AlphaAnimation(0.0f, 1.0f);        aAnimation.setDuration(2000);        aAnimation.setAnimationListener(this);        welcome_layout.startAnimation(aAnimation);    }    @Override    protected void setListener() {    }    @Override    protected void handleIntent(Intent intent) {    }    @Override    public void onPermissionsGranted(int requestCode, List<String> list) {        super.onPermissionsGranted(requestCode, list);        new Presenter().checkForUpdate(this);    }    @Override    public void onPermissionsDenied(int requestCode, List<String> list) {        super.onPermissionsDenied(requestCode, list);        ToastUtil.showToastLonger("请打开存储权限!并在APP内手动检查更新!");        skipToNext();    }    @Override    protected void initView() {        welcome_layout = findViewById(R.id.welcome_layout);    }    @Override    protected int getLayoutId() {        return R.layout.activity_welcome;    }    @Override    public void onAnimationStart(Animation animation) {    }    @Override    public void onAnimationEnd(Animation animation) {        if (requestStoragePermissions()) {            new Presenter().checkForUpdate(this);        }    }    @Override    public void onAnimationRepeat(Animation animation) {    }    private void skipToNext() {        if (IONCWalletSDK.getInstance().getAllWallet() != null && IONCWalletSDK.getInstance().getAllWallet().size() > 0) {            skip(MainActivity.class);        } else {            Intent intent1 = new Intent(mActivity, CreateWalletSelectActivity.class);            startActivity(intent1);            finish();        }    }    @Override    public void onCheckForUpdateStart() {        Logger.i("checkForUpdate", "onCheckForUpdateStart");        showProgress(getString(R.string.updating));    }    @Override    public void onCheckForUpdateSuccess() {        hideProgress();    }    @Override    public void onCheckForUpdateError() {        Logger.i("checkForUpdate", "onCheckForUpdateError");        hideProgress();        ToastUtil.showToastLonger(getString(R.string.error_code, ERROR_CODE_NET_WORK_UPDATE));        skipToNext();    }    @Override    public void onCheckForUpdateNeedUpdate(String url, String update_info, String v_code) {        NetUtils.downloadShowDialog(this, url, update_info, v_code, this);    }    @Override    public void onCheckForUpdateNoNewVersion() {        skipToNext();    }    @Override    public void onDownloadStart(Progress progress) {        //开始        Logger.i("开始下载......");    }    @Override    public void onDownloadProgress(Progress progress) {        //下载进度        int p = (int) App.scale(progress.fraction);        Logger.i("当前进度  " + p + "%");        progressValueTv.setText(p + "%");        progressRl.setVisibility(View.VISIBLE);        progressBar.setProgress(p);    }    @Override    public void onDownloadError(Progress progress) {        progressRl.setVisibility(View.GONE);        progressBar.setProgress(0);        ToastUtil.showLong(getResources().getString(R.string.download_error));        skipToNext();    }    @Override    public void onDownloadFinish(Progress progress) {        progressRl.setVisibility(View.GONE);        progressBar.setProgress(0);        NetUtils.appInstaller(this, progress.filePath);    }    @Override    public void onVersionDialogRightBtnClicked(VersionInfoDialog dialog, char type, String url) {        //下载对话框        new DownloadDialog(mActivity,url).show();    }    @Override    public void onVersionDialogLeftBtnClicked(VersionInfoDialog dialog) {        dialog.dismiss();        skipToNext();    }}